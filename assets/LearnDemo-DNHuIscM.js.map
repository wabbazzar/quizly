{"version":3,"file":"LearnDemo-DNHuIscM.js","sources":["../../src/components/modes/learn/LearnProgress.tsx","../../src/components/modes/learn/SessionComplete.tsx","../../src/pages/LearnDemo.tsx"],"sourcesContent":["import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport styles from './LearnProgress.module.css';\n\nexport interface LearnSessionProgress {\n  questionsAnswered: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  currentStreak: number;\n  maxStreak: number;\n  passedCards: Set<number>; // Cards answered correctly in this session\n  strugglingCards: Set<number>;\n  averageResponseTime: number;\n}\n\ninterface LearnProgressProps {\n  progress: LearnSessionProgress;\n  className?: string;\n}\n\nexport const LearnProgress: FC<LearnProgressProps> = memo(({ progress, className }) => {\n  const progressPercentage =\n    progress.totalQuestions > 0 ? (progress.questionsAnswered / progress.totalQuestions) * 100 : 0;\n\n  const accuracyPercentage =\n    progress.questionsAnswered > 0\n      ? (progress.correctAnswers / progress.questionsAnswered) * 100\n      : 0;\n\n  const formatTime = (ms: number) => {\n    const seconds = Math.round(ms / 1000);\n    if (seconds < 60) return `${seconds}s`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  return (\n    <div className={cn(styles.progressContainer, className)}>\n      {/* Progress Bar */}\n      <div className={styles.progressBarWrapper}>\n        <div\n          className={styles.progressBar}\n          role=\"progressbar\"\n          aria-valuenow={Math.round(progressPercentage)}\n          aria-valuemin={0}\n          aria-valuemax={100}\n          aria-label={`Progress: ${progress.questionsAnswered} of ${progress.totalQuestions} questions`}\n        >\n          <div className={styles.progressFill} style={{ width: `${progressPercentage}%` }}>\n            {progressPercentage > 20 && (\n              <span className={styles.progressText}>{Math.round(progressPercentage)}%</span>\n            )}\n          </div>\n        </div>\n        {progressPercentage <= 20 && (\n          <span className={styles.progressTextOutside}>{Math.round(progressPercentage)}%</span>\n        )}\n      </div>\n\n      {/* Stats Grid */}\n      <div className={styles.statsGrid}>\n        <div className={styles.statItem}>\n          <span className={styles.statLabel}>Progress</span>\n          <span className={styles.statValue}>\n            {progress.questionsAnswered}/{progress.totalQuestions}\n          </span>\n        </div>\n\n        <div className={styles.statItem}>\n          <span className={styles.statLabel}>Accuracy</span>\n          <span\n            className={cn(\n              styles.statValue,\n              accuracyPercentage >= 80 && styles.goodAccuracy,\n              accuracyPercentage < 60 && styles.poorAccuracy\n            )}\n          >\n            {Math.round(accuracyPercentage)}%\n          </span>\n        </div>\n\n        <div className={styles.statItem}>\n          <span className={styles.statLabel}>Streak</span>\n          <span className={styles.statValue}>\n            {progress.currentStreak}\n            {progress.currentStreak >= 3 && (\n              <span className={styles.streakFire} aria-label=\"fire streak\">\n                🔥\n              </span>\n            )}\n          </span>\n        </div>\n\n        <div className={styles.statItem}>\n          <span className={styles.statLabel}>Avg Time</span>\n          <span className={styles.statValue}>{formatTime(progress.averageResponseTime)}</span>\n        </div>\n      </div>\n\n      {/* Mastery Indicators */}\n      <div className={styles.masterySection}>\n        <div className={styles.masteryIndicators}>\n          <div className={styles.masteryItem}>\n            <div className={cn(styles.masteryDot, styles.masteredDot)} aria-hidden=\"true\" />\n            <span className={styles.masteryLabel}>\n              Mastered\n              <strong className={styles.masteryCount}>{progress.passedCards.size}</strong>\n            </span>\n          </div>\n\n          <div className={styles.masteryItem}>\n            <div className={cn(styles.masteryDot, styles.strugglingDot)} aria-hidden=\"true\" />\n            <span className={styles.masteryLabel}>\n              Needs Practice\n              <strong className={styles.masteryCount}>{progress.strugglingCards.size}</strong>\n            </span>\n          </div>\n\n          {progress.maxStreak > 0 && (\n            <div className={styles.masteryItem}>\n              <span className={styles.masteryLabel}>\n                Best Streak\n                <strong className={styles.masteryCount}>{progress.maxStreak}</strong>\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nLearnProgress.displayName = 'LearnProgress';\n","import { FC, memo, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport type { LearnSessionResults } from '@/types';\nimport styles from './SessionComplete.module.css';\n\ninterface SessionCompleteProps {\n  results: LearnSessionResults;\n  deckName: string;\n  onRetry: () => void;\n  onBackToDeck: () => void;\n}\n\nexport const SessionComplete: FC<SessionCompleteProps> = memo(\n  ({ results, deckName, onRetry, onBackToDeck }) => {\n    const navigate = useNavigate();\n\n    // Check if the entire deck is mastered\n    const isDeckMastered =\n      results.passedCards.length === results.totalQuestions && results.strugglingCards.length === 0;\n\n    // Keyboard shortcuts: 1 = Practice Again (if not mastered), 2 = Back to Deck, 3 = Home\n    useEffect(() => {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        // Ignore if typing in an input/textarea/contentEditable\n        const target = e.target as HTMLElement | null;\n        if (\n          target &&\n          (target.tagName === 'INPUT' ||\n            target.tagName === 'TEXTAREA' ||\n            (target as any).isContentEditable)\n        ) {\n          return;\n        }\n\n        if (e.key === '1' && !isDeckMastered) {\n          e.preventDefault();\n          onRetry();\n        } else if (e.key === '2') {\n          e.preventDefault();\n          onBackToDeck();\n        } else if (e.key === '3') {\n          e.preventDefault();\n          navigate('/');\n        }\n      };\n\n      window.addEventListener('keydown', handleKeyDown);\n      return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [onRetry, onBackToDeck, navigate, isDeckMastered]);\n\n    const formatTime = (ms: number) => {\n      const seconds = Math.floor(ms / 1000);\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n\n      if (minutes > 0) {\n        return `${minutes}m ${remainingSeconds}s`;\n      }\n      return `${seconds}s`;\n    };\n\n    const getPerformanceMessage = () => {\n      if (isDeckMastered) {\n        return { message: 'Deck Mastered!', emoji: '🏆', color: 'excellent' };\n      }\n\n      const accuracy = results.accuracy;\n\n      if (accuracy >= 90) {\n        return { message: 'Outstanding!', emoji: '🌟', color: 'excellent' };\n      } else if (accuracy >= 80) {\n        return { message: 'Great job!', emoji: '🎉', color: 'great' };\n      } else if (accuracy >= 70) {\n        return { message: 'Good work!', emoji: '👍', color: 'good' };\n      } else if (accuracy >= 60) {\n        return { message: 'Keep practicing!', emoji: '💪', color: 'fair' };\n      } else {\n        return { message: \"Don't give up!\", emoji: '🚀', color: 'needsWork' };\n      }\n    };\n\n    const performance = getPerformanceMessage();\n\n    return (\n      <motion.div\n        className={styles.sessionComplete}\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.3 }}\n        data-testid=\"session-complete\"\n      >\n        <div className={styles.container}>\n          {/* Header */}\n          <header className={styles.header}>\n            <motion.div\n              className={styles.emoji}\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: 'spring', stiffness: 200 }}\n            >\n              {performance.emoji}\n            </motion.div>\n            <h1 className={`${styles.title} ${styles[performance.color]}`}>\n              {performance.message}\n            </h1>\n            <p className={styles.subtitle}>\n              {isDeckMastered\n                ? `Congratulations! You've mastered all cards in ${deckName}!`\n                : `You completed the Learn session for ${deckName}`}\n            </p>\n          </header>\n\n          {/* Results Summary */}\n          <div className={styles.resultsGrid}>\n            <motion.div\n              className={styles.resultCard}\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.3 }}\n            >\n              <div className={styles.resultValue}>{Math.round(results.accuracy)}%</div>\n              <div className={styles.resultLabel}>Accuracy</div>\n            </motion.div>\n\n            <motion.div\n              className={styles.resultCard}\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.4 }}\n            >\n              <div className={styles.resultValue}>\n                {results.correctAnswers}/{results.totalQuestions}\n              </div>\n              <div className={styles.resultLabel}>Correct</div>\n            </motion.div>\n\n            <motion.div\n              className={styles.resultCard}\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.5 }}\n            >\n              <div className={styles.resultValue}>{results.maxStreak}</div>\n              <div className={styles.resultLabel}>Best Streak</div>\n            </motion.div>\n\n            <motion.div\n              className={styles.resultCard}\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.6 }}\n            >\n              <div className={styles.resultValue}>{formatTime(results.averageResponseTime)}</div>\n              <div className={styles.resultLabel}>Avg Time</div>\n            </motion.div>\n          </div>\n\n          {/* Card Results */}\n          {(results.passedCards.length > 0 || results.strugglingCards.length > 0) && (\n            <motion.div\n              className={styles.masterySection}\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.7 }}\n            >\n              {isDeckMastered ? (\n                <div className={styles.masteryItem}>\n                  <span className={`${styles.masteryIcon} ${styles.mastered}`}>🏆</span>\n                  <span className={styles.masteryText}>\n                    Perfect! All <strong>{results.totalQuestions}</strong> cards mastered!\n                  </span>\n                </div>\n              ) : (\n                <>\n                  {results.passedCards.length > 0 && (\n                    <div className={styles.masteryItem}>\n                      <span className={`${styles.masteryIcon} ${styles.mastered}`}>✨</span>\n                      <span className={styles.masteryText}>\n                        Passed <strong>{results.passedCards.length}</strong> cards\n                      </span>\n                    </div>\n                  )}\n                  {results.strugglingCards.length > 0 && (\n                    <div className={styles.masteryItem}>\n                      <span className={`${styles.masteryIcon} ${styles.struggling}`}>📚</span>\n                      <span className={styles.masteryText}>\n                        <strong>{results.strugglingCards.length}</strong> cards need more practice\n                      </span>\n                    </div>\n                  )}\n                </>\n              )}\n            </motion.div>\n          )}\n\n          {/* Session Duration */}\n          <motion.div\n            className={styles.duration}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.8 }}\n          >\n            Session duration: {formatTime(results.duration)}\n          </motion.div>\n\n          {/* Action Buttons */}\n          <motion.div\n            className={styles.actions}\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.9 }}\n          >\n            {!isDeckMastered && (\n              <button\n                className={`${styles.actionButton} ${styles.primary}`}\n                onClick={onRetry}\n                data-testid=\"retry-button\"\n              >\n                <span className={styles.keyHint}>1</span>\n                Practice Again\n              </button>\n            )}\n            <button\n              className={`${styles.actionButton} ${styles.secondary}`}\n              onClick={onBackToDeck}\n              data-testid=\"back-button\"\n            >\n              <span className={styles.keyHint}>2</span>\n              Back to Deck\n            </button>\n            <button\n              className={`${styles.actionButton} ${styles.tertiary}`}\n              onClick={() => navigate('/')}\n              data-testid=\"home-button\"\n            >\n              <span className={styles.keyHint}>3</span>\n              Home\n            </button>\n          </motion.div>\n\n          {/* Motivational Message */}\n          {results.accuracy < 70 && (\n            <motion.p\n              className={styles.motivationalMessage}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            >\n              Remember: Every expert was once a beginner. Keep practicing and you&apos;ll improve\n              with each session!\n            </motion.p>\n          )}\n        </div>\n      </motion.div>\n    );\n  }\n);\n\nSessionComplete.displayName = 'SessionComplete';\n","import { FC, useState } from 'react';\nimport { QuestionCard, LearnProgress, LearnSessionProgress } from '@/components/modes/learn';\nimport { Question } from '@/types';\nimport styles from './Learn.module.css';\n\n// Demo questions for testing\nconst demoQuestions: Question[] = [\n  {\n    id: '1',\n    type: 'multiple_choice',\n    cardIndex: 0,\n    questionText: 'What is the Chinese word for \"hello\"?',\n    questionSides: ['side_a'],\n    correctAnswer: '你好',\n    options: ['你好', '谢谢', '再见', '早上好'],\n    difficulty: 0.3,\n  },\n  {\n    id: '2',\n    type: 'free_text',\n    cardIndex: 1,\n    questionText: 'How do you say \"thank you\" in Chinese?',\n    questionSides: ['side_a'],\n    correctAnswer: '谢谢',\n    acceptedAnswers: ['谢谢', 'xie xie', 'xiexie', 'xièxie'],\n    difficulty: 0.5,\n  },\n  {\n    id: '3',\n    type: 'multiple_choice',\n    cardIndex: 2,\n    questionText: 'Which of these means \"goodbye\"?',\n    questionSides: ['side_a'],\n    correctAnswer: '再见',\n    options: ['晚安', '早上好', '再见', '你好'],\n    difficulty: 0.4,\n  },\n];\n\nconst LearnDemo: FC = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [progress, setProgress] = useState<LearnSessionProgress>({\n    questionsAnswered: 0,\n    totalQuestions: demoQuestions.length,\n    correctAnswers: 0,\n    currentStreak: 0,\n    maxStreak: 0,\n    passedCards: new Set(),\n    strugglingCards: new Set(),\n    averageResponseTime: 3500,\n  });\n\n  const currentQuestion = demoQuestions[currentQuestionIndex];\n\n  const handleAnswer = (_answer: string, correct: boolean) => {\n    setIsCorrect(correct);\n    setShowFeedback(true);\n\n    // Update progress\n    setProgress(prev => {\n      const newCorrectAnswers = correct ? prev.correctAnswers + 1 : prev.correctAnswers;\n      const newStreak = correct ? prev.currentStreak + 1 : 0;\n      const newMaxStreak = Math.max(prev.maxStreak, newStreak);\n      const newQuestionsAnswered = prev.questionsAnswered + 1;\n\n      const newPassedCards = new Set(prev.passedCards);\n      const newStrugglingCards = new Set(prev.strugglingCards);\n\n      if (correct && newStreak >= 3) {\n        newPassedCards.add(currentQuestion.cardIndex);\n        newStrugglingCards.delete(currentQuestion.cardIndex);\n      } else if (!correct) {\n        newStrugglingCards.add(currentQuestion.cardIndex);\n      }\n\n      return {\n        ...prev,\n        questionsAnswered: newQuestionsAnswered,\n        correctAnswers: newCorrectAnswers,\n        currentStreak: newStreak,\n        maxStreak: newMaxStreak,\n        passedCards: newPassedCards,\n        strugglingCards: newStrugglingCards,\n      };\n    });\n\n    // Auto-advance after 2 seconds\n    setTimeout(() => {\n      handleNextQuestion();\n    }, 2000);\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < demoQuestions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setShowFeedback(false);\n      setIsCorrect(false);\n    } else {\n      // Session complete\n      alert('Session complete! Great job!');\n    }\n  };\n\n  return (\n    <div className={styles.learnPage}>\n      <header className={styles.header}>\n        <h1 className={styles.title}>Learn Mode Demo</h1>\n        <p className={styles.subtitle}>Test the Learn UI components</p>\n      </header>\n\n      <main className={styles.content}>\n        <LearnProgress progress={progress} className={styles.progressSection} />\n\n        <QuestionCard\n          question={currentQuestion}\n          onAnswer={handleAnswer}\n          showFeedback={showFeedback}\n          feedback={\n            showFeedback\n              ? {\n                  isCorrect,\n                  correctAnswer: currentQuestion.correctAnswer,\n                  explanation: isCorrect\n                    ? 'Great job! You got it right.'\n                    : `The correct answer is \"${currentQuestion.correctAnswer}\".`,\n                }\n              : undefined\n          }\n          disabled={showFeedback}\n        />\n\n        {showFeedback && (\n          <div className={styles.navigationButtons}>\n            <button\n              className={styles.continueButton}\n              onClick={handleNextQuestion}\n              data-testid=\"continue-button\"\n            >\n              {currentQuestionIndex < demoQuestions.length - 1 ? 'Next Question' : 'Finish'}\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default LearnDemo;\n"],"names":["LearnProgress","memo","progress","className","progressPercentage","totalQuestions","questionsAnswered","accuracyPercentage","correctAnswers","cn","styles","children","jsxs","jsx","role","Math","round","style","width","currentStreak","ms","seconds","floor","formatTime","averageResponseTime","passedCards","size","strugglingCards","maxStreak","displayName","results","deckName","onRetry","onBackToDeck","navigate","useNavigate","isDeckMastered","length","useEffect","handleKeyDown","e","target","tagName","isContentEditable","key","preventDefault","window","addEventListener","removeEventListener","minutes","performance","message","emoji","color","accuracy","getPerformanceMessage","motion","div","sessionComplete","initial","opacity","scale","animate","transition","duration","container","header","delay","type","stiffness","title","subtitle","resultsGrid","resultCard","y","resultValue","resultLabel","masterySection","masteryItem","masteryIcon","mastered","masteryText","Fragment","struggling","actions","actionButton","primary","onClick","keyHint","secondary","tertiary","p","motivationalMessage","demoQuestions","id","cardIndex","questionText","questionSides","correctAnswer","options","difficulty","acceptedAnswers","LearnDemo","currentQuestionIndex","setCurrentQuestionIndex","useState","showFeedback","setShowFeedback","isCorrect","setIsCorrect","setProgress","Set","currentQuestion","handleNextQuestion","prev","alert","learnPage","content","progressSection","QuestionCard","question","onAnswer","_answer","correct","newCorrectAnswers","newStreak","newMaxStreak","max","newQuestionsAnswered","newPassedCards","newStrugglingCards","add","delete","setTimeout","feedback","explanation","disabled","navigationButtons","continueButton"],"mappings":"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"}